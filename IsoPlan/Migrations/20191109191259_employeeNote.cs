using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace IsoPlan.Migrations
{
    public partial class employeeNote : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "Note",
                table: "Employees",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 140, 81, 117, 11, 6, 91, 19, 23, 108, 8, 10, 62, 65, 113, 211, 46, 116, 205, 124, 27, 80, 35, 39, 137, 165, 126, 120, 23, 144, 103, 64, 11, 117, 134, 177, 92, 15, 186, 213, 41, 221, 152, 135, 3, 96, 118, 169, 60, 245, 198, 53, 251, 183, 14, 238, 78, 13, 2, 184, 56, 23, 10, 141, 201 }, new byte[] { 216, 74, 2, 137, 82, 246, 20, 174, 67, 165, 181, 205, 163, 71, 187, 191, 15, 240, 105, 165, 101, 71, 21, 159, 49, 193, 53, 114, 89, 170, 126, 61, 249, 170, 73, 105, 18, 162, 106, 154, 203, 232, 120, 194, 165, 129, 63, 38, 119, 159, 136, 209, 242, 73, 158, 69, 33, 59, 108, 99, 144, 15, 183, 37, 175, 172, 9, 66, 119, 189, 212, 145, 115, 81, 3, 184, 255, 127, 201, 33, 255, 18, 91, 146, 162, 211, 64, 166, 76, 237, 57, 129, 43, 86, 111, 11, 11, 165, 222, 77, 136, 20, 51, 117, 100, 45, 149, 83, 125, 131, 48, 216, 49, 1, 172, 191, 182, 182, 184, 237, 226, 217, 204, 111, 248, 236, 27, 50 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Note",
                table: "Employees");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 149, 144, 247, 242, 65, 60, 242, 220, 232, 227, 238, 172, 248, 238, 248, 242, 189, 202, 176, 133, 123, 249, 169, 75, 47, 194, 193, 191, 94, 237, 75, 122, 65, 45, 122, 3, 253, 241, 230, 29, 146, 154, 144, 50, 76, 70, 145, 85, 15, 235, 97, 235, 97, 27, 75, 213, 139, 213, 205, 134, 254, 32, 62, 183 }, new byte[] { 107, 77, 114, 206, 137, 237, 131, 35, 99, 215, 217, 173, 2, 241, 248, 251, 80, 34, 194, 167, 115, 246, 31, 119, 70, 12, 130, 164, 139, 157, 243, 181, 130, 77, 21, 60, 25, 165, 32, 149, 81, 86, 200, 50, 157, 255, 187, 179, 236, 198, 58, 153, 196, 212, 112, 162, 157, 153, 122, 56, 40, 206, 71, 147, 0, 71, 112, 103, 245, 110, 204, 212, 120, 184, 181, 75, 131, 175, 244, 97, 123, 147, 119, 41, 30, 81, 171, 161, 145, 89, 110, 102, 137, 22, 27, 88, 114, 24, 196, 87, 13, 52, 4, 121, 166, 148, 120, 92, 238, 36, 213, 43, 39, 115, 63, 151, 74, 251, 10, 101, 138, 201, 149, 4, 32, 149, 128, 62 } });
        }
    }
}
